WAF BYPASS TECHNIQUES




DETECTION
Check for WAF-set cookies
Check for identifying headers
	-check for altered headers or irregular charcters in headers
	--check Server: header
		---SERVER header varies on different protocols, e.g. websocket, or content types
Check for unusual response codes with tampered requests
Make GET requests to irregular open ports 
Make GET requests with outdated protocols, e.g. HTTP/0.8
Drop Action Technique - Send a raw crafted FIN/RST packet to server and identify response
Side Channel Attacks - Examine the timing behaviour of the request and response content



Content-Type Tampering

http://www.iana.org/assignments/media-types/media-types.xhtml
	-IANA list for registered media types
	

Common WAF Fingerprints
WAF Name				Detections Method(s)
F5 Networks (ASM)		
						Blocked response content contains warning: The requested URL was rejected. Please consult with your administrator.
F5 Networks (BIG-IP ASM)
						Response headers containing BigIP or F5 keywords.
						Response header field X-WA-Info header.
						Response header containing jumbled X-Cnection field value.
F5 Networks (TrafficShield)
						Response header: F5-TrafficShield
										 ASINFO
ASP.NET Generic (IIS)	
						Response headers may contain X-ASPNET-Version header value.
						Blocked Response Content: This generic 403 error means that the authenticated user is not authorized to use the requested resource
												  Error Code 0x00000000
						X-Powered-By: ASP.NET
AWS (Amazon)	
						Response headers contain AWS value
						Blocked response status code return 403 Forbidden response
Cloudflare	
						Response header: cf-ray
						Server header value: cloudflare
						Cookie: __cfuid
						Page contains: Attention Required! or Cloudflare Ray ID:
						CLOUDFLARE_ERROR_500S_BOX upon hitting invalid URLs
Barracuda WAF	
						Response cookie barra_counter_session value
						Response header containing barracuda_ keyword
Cisco ACE XML Gateway
						Response header ACE XML Gateway
dotDefender
						Blocked response content: dotDefender Blocked Your Request
FortiWeb
						Blocked response content contains value .fgd_icon
						Response header FORTIWAFSID= on malicious requests
						Cookie: cookiesession1
Akamai (KONA Site Defender)
						Header: AkamaiGHost
ModSecurity (Trustwave)
						Blocked response page contains: This error was generated by Mod_Security
														One or more things in your request were suspicious
														rules of the mod_security module
						Response headers: Mod_Security or NYOB
NetScaler (Citrix)	
						Jumbled Connection: response header nnCoection:
						Cookie: ns_af
						Headers: citrix_ns_id or NSC_*
						Header field value: NS-CACHE
IBM Proventia
						Blocked response page contains: request does not match Proventia rules
ASP.NET Request Validation Mode
						Response page contains: ASP.NET has detected data in the request that is potentially dangerous
												Request Validation has detected a potentially dangerous client input value
												HttpRequestValidationException
						Blocked response code returned is always 500 Internal Error
Dell SonicWall
						Response Header: SonicWALL
						Blocked response page contains: This request is blocked by the SonicWALL.
														#shd
														#nsa_banner
														Web Site Blocked
Tencent Cloud WAF
						Blocked Response code: 405 Method Not Allowed
						Blocked response page contains reference to waf.tencent-cloud.com




Charset Encoding Payload Smuggling
	iconv -f ascii -t utf-16BE

Target					Post(application/x-www-form-urlencoded)			Note(s)
Nginx,					IBM037, IBM500, cp875, IBM1026, IBM273			query string and body were encoded
uWSGI-Django-Python3													url-decoded parameters in query string and body afterwards
																		equal sign and ampersand needed to be encoded as well (no url-encoding)

Nginx,					IBM037, IBM500, cp875, IBM1026, utf-16, utf-32,	query string and body were encoded
uWSGI-Django-Python2	utf-32BE, IBM424								url-encoded parameters in query string and body
																		equal sign and ampersand should not be encoded in any way

Apache-TOMCAT8-			IBM037, IBM500, IBM870, cp875, IBM1026,			query string in its original format (not encoded â€“ could be url- encoded as usual)
JVM1.8-JSP	 			IBM01140, IBM01141, IBM01142, IBM01143,			equal sign and ampersand should not be encoded in any way
						IBM01144, IBM01145, IBM01146, IBM01147,			body could be sent with/without url-encoding
						IBM01148, IBM01149, utf-16, utf-32, utf-32BE,
						IBM273, IBM277, IBM278, IBM280, IBM284, IBM285,
						IBM290, IBM297, IBM420, IBM424, IBM-Thai,
						IBM871, cp1025

Apache-TOMCAT7-			IBM037, IBM500, IBM870, cp875, IBM1026,			query string in its original format (not encoded)
JVM1.6-JSP				IBM01140, IBM01141, IBM01142, IBM01143,			equal sign and ampersand should not be encoded
						IBM01144, IBM01145, IBM01146, IBM01147,			body could be sent with/without url-encoding
						IBM01148, IBM01149, utf-16, utf-32, utf-32BE,
						IBM273, IBM277, IBM278, IBM280, IBM284, IBM285,
						IBM297, IBM420, IBM424, IBM-Thai, IBM871,
						cp1025	

Apache-PHP5				None
(mod_php & FastCGI)

IIS8-PHP7.1-FastCGI		None

IIS6,7.5,8,10-			None
ASP Classic

IIS6,7.5,8,10-			IBM037, IBM500, IBM870, cp875, IBM1026, IBM01047,	query string and body were encoded
ASPX(v4.x)				IBM01140, IBM01141, IBM01142, IBM01143, IBM01144,	equal sign and ampersand should not be encoded
						IBM01145, IBM01146, IBM01147, IBM01148, IBM01149,	body could be sent with/without url-encoding
						utf-16, unicodeFFFE, utf-32, utf-32BE, IBM273,
						IBM277, IBM278, IBM280, IBM284, IBM285, IBM290,
						IBM297, IBM420,IBM423, IBM424,
						x-EBCDIC-KoreanExtended,IBM-Thai, IBM871, IBM880,
						IBM905, IBM00924, cp1025	

Double-encoded charset payload smuggling with XML payloads
echo -n '<?xml version="1.0" encoding="UTF-8"?>' >dtd.xml && echo '?><a>31337</a>' | iconv -f UTF-8 -t UTF-16BE >>dtd.xml
	--for a more thorough explanation see note xxe.txt
	

Accepted Content Type Dispositions:
text/html
text/xml
application/xml
application/xhtml+xml
application/xml-dtd
application/rss+xml
image/svg+xml
text/xml-external-parsed-entity
application/xml-patch+xml
application/xenc+xml
application/wsdl+xml
application/soap+xml
application/rfc+xml



Tools:
WAFNinja
		Fuzzing
	python wafninja.py fuzz -u <target> -t xss
		Bypassing
	python wafninja.py bypass -u <target> -p "name=<payload>&Submit=Submit" -t xss
		Insert Fuzzing
	python wafninja.py insert-fuzz -i select -e select -t sql
https://github.com/khalilbijjou/wafninja

WhatWaf
	whatwaf -u <target> --ra --throttle 2
		--WAF evasion
https://github.com/ekultek/whatwaf

SQLMap Tamper Scripts
		General
	sqlmap -u <target> --level=5 --risk=3 -p 'item1' --tamper=apostrophemask,apostrophenullencode,base64encode,between,chardoubleencode,charencode,charunicodeencode,equaltolike,greatest,ifnull2ifisnull,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2plus,space2randomblank,unionalltounion,unmagicquotes
		MSSQL Tamper Testing
	sqlmap -u <target> --level=5 --risk=3 -p 'item1' --tamper=between,charencode,charunicodeencode,equaltolike,greatest,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,sp_password,space2comment,space2dash,space2mssqlblank,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes
		MySQL Tamper Testing
	sqlmap -u <target> --level=5 --risk=3 -p 'item1' --tamper=between,bluecoat,charencode,charunicodeencode,concat2concatws,equaltolike,greatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,multiplespaces,nonrecursivereplacement,percentage,randomcase,securesphere,space2comment,space2hash,space2morehash,space2mysqldash,space2plus,space2randomblank,unionalltounion,unmagicquotes,versionedkeywords,versionedmorekeywords,xforwardedfor
		Generic Tamper Testing
	sqlmap -u <target> --level=5 --risk=3 -p 'item1' --tamper=apostrophemask,apostrophenullencode,appendnullbyte,base64encode,between,bluecoat,chardoubleencode,charencode,charunicodeencode,concat2concatws,equaltolike,greatest,halfversionedmorekeywords,ifnull2ifisnull,modsecurityversioned,modsecurityzeroversioned,multiplespaces,nonrecursivereplacement,percentage,randomcase,randomcomments,securesphere,space2comment,space2dash,space2hash,space2morehash,space2mssqlblank,space2mssqlhash,space2mysqlblank,space2mysqldash,space2plus,space2randomblank,sp_password,unionalltounion,unmagicquotes,versionedkeywords,versionedmorekeywords

NMap
	nmap --script=http-waf-fingerprint --script-args http-waf-fingerprint.intensive=1 <target>

IdentYwaf
	python identYwaf.py --delay=2 --proxy=<proxy> <target>
https://github.com/stamparm/identywaf