Port scanning alternatives

bash
(: </dev/tcp/127.0.0.1/80) &>/dev/null && echo "OPEN" || echo "CLOSED"

netcat
nc -nvv -w 1 -z 10.0.0.19 3388-3390
	-tcp
nc -nv -u -z -w 1 10.0-0.19 160-162
	-udp

hping3
hping3 -c 3 -s 53 -p 80 -S 192.168.0.1
Open = flags = SA
Closed = Flags = RA
Blocked = ICMP unreachable
Dropped = No response

arp-scan 192.168.50.8/28 -I eth0

	POWERSHELL
Test-Connection -BufferSize 32 -Count 1 -Quiet -ComputerName 192.168.2.222
$s = new-object System.Net.Sockets.TcpClient(192.168.2.222, 445)
If(socket.Connected) { "s_connected" }
$s.Close()
	OR
$socket = new-object System.Net.Sockets.TcpClient(192.168.2.222, 445); If(socket.Connected) { "socket connected" }; $socket.Close()
	test egress filtering
1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect("allports.exposed",$_)) "Port $_ is open!" } 2>$null
